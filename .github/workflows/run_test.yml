name: Test JData

on: [push]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - if: matrix.python-version == '3.7.17'
        run: |
          sudo ln -sf /usr/bin/python2.7 `which python`
          sudo ln -sf /usr/bin/pip2.7 `which pip`
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --force-reinstall --no-cache-dir --upgrade numpy backports.lzma setuptools h5py scipy bjdata lz4
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build sdist
        run: |
          python setup.py sdist
      - name: Basic test
        run: |
          python -m unittest discover -v test
      - name: Codec benchmark
        if: matrix.python-version != '3.7' || matrix.python-version != '3.8' || matrix.python-version == '3.9'
        run: |
          pip install "numpy<2.0" blosc2
          cd benchmark
          python -m benchcodecs
      - name: Codec benchmark
        if: matrix.python-version != '3.7' || matrix.python-version != '3.8' || matrix.python-version != '3.9'
        run: |
          pip install blosc2
          cd benchmark
          python -m benchcodecs
      - name: NIfTI file loading benchmark
        run: |
          pip install --upgrade nibabel
          cd benchmark
          python -m benchnifti

  deploy:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install build
        run: python3 -m pip install --upgrade build
      - name: Build wheel
        run: |
          python3 -m build
      - name: Check If the Build Version Exists on PyPI
        id: perform_pypi_upload_check
        shell: bash
        run: |
          $GITHUB_WORKSPACE/.github/check-pypi-upload.sh
      - name: Upload packages to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.actor == 'fangq' && steps.perform_pypi_upload_check.outputs.perform_pypi_upload == 1  && github.event_name != 'pull_request'}}
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify_metadata: false
          verbose: true
          skip_existing: true
